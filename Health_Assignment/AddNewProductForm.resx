<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="icon_customer.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +xBqzVMAAAAASUVORK5CYII=
</value>
  </data>
</root>