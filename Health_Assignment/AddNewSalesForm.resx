<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="icon_customer.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>