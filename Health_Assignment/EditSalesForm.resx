<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="icon_customer.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>